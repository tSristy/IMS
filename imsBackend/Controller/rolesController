const Roles = require('../Model/rolesModel');

// Add a new role
const addRole = async (req, res) => {
  try {
    const { Role_Name, Is_Active, Created_By,Created_Date, Modified_By, Modified_Date } = req.body;
    const newRole = await Role.create({
        Role_Name,
        Is_Active,
        Created_By,
        Created_Date,
        Modified_By,
        Modified_Date,
    });
    res.status(201).json(newRole);
  } catch (error) {
    console.error('Error adding role:', error);
    res.status(500).json({ error: 'Failed to add role' });
  }
};

// Get all roles
const getAllRoles = async (req, res) => {
  try {
    const roles = await Role.findAll();
    res.json(roles);
  } catch (error) {
    console.error('Error fetching roles:', error);
    res.status(500).json({ error: 'Failed to fetch roles' });
  }
};

// Update a role 
const updatedRole = async (req, res) => {
  try {
    const Id = req.params.id;
    const { Role_Name, Is_Active, Created_By,Created_Date, Modified_By, Modified_Date } = req.body;
    const updatedRole = await Role.update(
      { Role_Name, Is_Active, Created_By,Created_Date, Modified_By, Modified_Date },
      { where: { Id: Id } }
    );
    res.sendStatus(204);
  } catch (error) {
    console.error('Error updating role:', error);
    res.status(500).json({ error: 'Failed to update role' });
  }
};

// Fetch role for edit by code
const getRole = async (req, res) => {
  try {
    const Id = req.params.id;
    const role = await Role.findByPk(Id);
    if (!role) {
      return res.status(404).json({ error: 'Role not found' });
    }
    res.json(role);
  } catch (error) {
    console.error('Error fetching role details:', error);
    res.status(500).json({ error: 'Failed to fetch role details' });
  }
};
  
  

// Delete a role item 
const deletedRole = async (req, res) => {
  try {
    const Id = req.params.id;
    await Role.destroy({ where: { Id: Id } });
    res.sendStatus(204);
  } catch (error) {
    console.error('Error deleting role:', error);
    res.status(500).json({ error: 'Failed to delete role' });
  }
};

// fetch all rows of role
const getAllRoleIds = async (req, res) => {
  try {
    const role = await Role.findAll({ attributes: ['Id'] });
    const Id = Id.map(role => role.Id);
    res.json(Id);
  } catch (error) {
    console.error('Error fetching role IDs:', error);
    res.status(500).json({ error: 'Failed to fetch role IDs' });
  }
};



module.exports = { addRole, getAllRoles,updatedRole,getRole, deletedRole, getAllRoleIds };